package fr.eseo.cc3.servlet;

import java.io.IOException;
import java.net.URL;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.vmware.vim25.ManagedObjectReference;
import com.vmware.vim25.VirtualMachineCloneSpec;
import com.vmware.vim25.VirtualMachineRelocateSpec;
import com.vmware.vim25.mo.Folder;
import com.vmware.vim25.mo.InventoryNavigator;
import com.vmware.vim25.mo.ManagedEntity;
import com.vmware.vim25.mo.ServiceInstance;
import com.vmware.vim25.mo.VirtualMachine;

import fr.eseo.cc3.dao.bean.Utilisateur;

/**
 * Servlet implementation class ServletClonerVM
 */
@WebServlet(urlPatterns = { "/ClonerVM" }, name = "ServletClonerVM")
public class ServletClonerVM extends ServletCommon {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public ServletClonerVM() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Utilisateur utilisateur = (Utilisateur) request.getSession().getAttribute("utilisateur");
		String out=this.checkRole("AccueilAdmin","AccueilReferent" , "AccueilEtudiant", utilisateur);
		
		if(out.equals(PAGE_ERREUR_DROITS)) {
			this.getServletContext().getRequestDispatcher(out).forward( request, response );
			
		}else {
			HttpSession session = request.getSession();
			ServiceInstance si = new ServiceInstance(new URL("https://192.168.4.42/sdk"), this.getClient(request).getUser(), this.getClient(request).getPassword(), true);
			
			Folder rootFolder = si.getRootFolder(); 
			ManagedEntity[] mes = new InventoryNavigator(rootFolder).searchManagedEntities("VirtualMachine"); 
			VirtualMachine vm = null;
			
			for(int i=0; i < mes.length; i++) {
				vm = (VirtualMachine) mes[i];
				if(vm.getName().equals(request.getParameter("vmName"))) {
					VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();
					VirtualMachineRelocateSpec relocSpec = new VirtualMachineRelocateSpec();
					cloneSpec.setLocation(relocSpec);
					
					relocSpec.setDatastore(vm.getDatastores()[0].getMOR());
					relocSpec.setPool(vm.getResourcePool().getMOR());
					
					cloneSpec.setPowerOn(false);
					cloneSpec.setTemplate(false);
					
					String clonedName = "cloneVM";

					vm.cloneVM_Task(rootFolder, clonedName, cloneSpec);
				}
			}
			si.getServerConnection().logout();
			response.sendRedirect(out);
		}
	}
}
