package fr.eseo.cc3.servlet;

import java.io.IOException;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import fr.eseo.cc3.clientapi.ClientVSphere;
import fr.eseo.cc3.dao.DAOFactory;
import fr.eseo.cc3.dao.bean.Utilisateur;
import fr.eseo.cc3.dao.bean.VirtualMachine;
import fr.eseo.cc3.json.JsonReader;
import fr.eseo.cc3.model.exception.ErrorConnectionVSphere;

/**
 * Servlet implementation class ServletModificationVM
 */
@WebServlet(urlPatterns = { "/ModificationVM" }, name = "ServletModificationVM")
public class ServletModificationVM extends ServletCommon {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		this.getServletContext().getRequestDispatcher("/WEB-INF/Administrateur/modificationVM.jsp").forward( request, response );
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Utilisateur utilisateur = (Utilisateur) request.getSession().getAttribute("utilisateur");
		int numServeur = (int) request.getSession().getAttribute("serveur");
		String out = this.checkRole("AccueilAdmin", "AccueilReferent", "AccueilEtudiant", utilisateur);

		if(out.equals(PAGE_ERREUR_DROITS)) {
			this.getServletContext().getRequestDispatcher(out).forward( request, response );
		}else {
			try {
				JsonReader json = new JsonReader();
				VirtualMachine vm = (VirtualMachine) ((DAOFactory) getServletContext().getAttribute("daofactory")).getVirtualMachineDao().trouver(request.getParameter("vmId"), numServeur);

				String httpRequest = CONFIGURATION_API.getString("GET_VM")+"/"+vm.getRefVm()+"/hardware/";


				ClientVSphere client = this.getClient(request);

				client.sendData("PATCH", httpRequest+"cpu", json.updateVMRequest("cpu", request.getParameter("cpu")));
				client.sendData("PATCH", httpRequest+"memory", json.updateVMRequest("memory", request.getParameter("memory")));

				request.getSession().setAttribute("vm", vm);

			} catch (ErrorConnectionVSphere | IOException | SQLException e) {
				request.setAttribute("erreur", e);
				out="WEB-INF/pagesErreur/ErrorConnection.jsp";
			} finally {
				response.sendRedirect(out);
			}

		}
	}
}
